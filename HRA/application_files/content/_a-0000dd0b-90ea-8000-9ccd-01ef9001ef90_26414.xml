<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>HRA_GetTopSkills</name>
        <uuid>_a-0000dd0b-90ea-8000-9ccd-01ef9001ef90_26414</uuid>
        <description>Returns the specified top skills</description>
        <parentUuid>_a-0000dd0b-90ea-8000-9ccd-01ef9001ef90_18584</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>with(
  local!AboluteCount: abs(
    if(
      #&quot;_a-0000d33c-c5a1-8000-7bd7-760000760000_1541&quot;(
        ri!TopLeastCount
      ),
      0,
      ri!TopLeastCount
    )
  ),
  if(
    #&quot;_a-0000d33c-c5a1-8000-7bd7-760000760000_1541&quot;(
      ri!EmployeeSkillView
    ),
    null(),
    if(
      local!AboluteCount = 0,
      null(),
      if(
        local!AboluteCount &gt;= count(
          ri!EmployeeSkillView
        ),
        ri!EmployeeSkillView,
        remove(
          ri!EmployeeSkillView,
          local!AboluteCount + 1 + enumerate(
            count(
              ri!EmployeeSkillView
            ) - local!AboluteCount
          )
        )
      )
    )
  )
)</definition>
        <namedTypedValue>
            <name>EmployeeSkillView</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>TopLeastCount</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
